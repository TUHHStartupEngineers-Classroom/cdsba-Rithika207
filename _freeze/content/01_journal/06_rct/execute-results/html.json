{
  "hash": "661e2b828ab3a583653387caa2e3c347",
  "result": {
    "markdown": "---\ntitle: \"Randomized Controlled Trials\"\nauthor: \"Rithika Rao Dodda\"\nnumber-sections: false\n---\n\n\n# Assignment\n\n\n::: {.cell hash='06_rct_cache/html/unnamed-chunk-1_31193888cdcb907854af225deb7b9a6a'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.4     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.2     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n::: {.cell hash='06_rct_cache/html/unnamed-chunk-2_345ed7276e693205f43bd4627da26356'}\n\n```{.r .cell-code}\n# Load the file\nabtest_data <- readRDS(\"Causal_Data_Science_Data/abtest_online.rds\")\n# Create Data Frame\ndf1=data.frame(abtest_data)\ndf<- data.frame(ip = abtest_data$ip, chatbot = abtest_data$chatbot)\n```\n:::\n\n\n1. Checking whether the covariates are balanced across the groups:\n\n::: {.cell hash='06_rct_cache/html/unnamed-chunk-3_2061c082fa29be6f2e193dec3c0a411b'}\n\n```{.r .cell-code}\nip = abtest_data$ip\ndf$ip <- substr(ip, nchar(ip), nchar(ip))\ndf$chatbot <- as.integer(as.logical(df$chatbot))\ndf$ipn = as.numeric(df$ip)\ndf1<- data.frame(ip = df$ipn, chatbot = df$chatbot)\nX <- tibble(df1)\n```\n:::\n\n::: {.cell hash='06_rct_cache/html/unnamed-chunk-4_4b58d01107ce5a9b75af1272679c0c64'}\n\n```{.r .cell-code}\n# Define vector of sample sizes\nsss <- c(10, 50, 100, seq(500, 1000, 500))\n\n# Create empty lists to store average tables in\navg_tbl_ip_lst <- list()\navg_tbl_chatbot_lst <- list()\ntbl_sampled_lst <- list()\n\n# Iterate through sample sizes\n# ... for sample size in sample sizes ...\nfor (ss in sss) {\n  # sample from population\n  X_sampled <- sample_n(X, ss)\n  \n  # perform random assignment\n  D <- rbinom(ss, 1, 0.5)\n  \n  # combine characteristics and assignment in one table\n  tbl_sampled <- X_sampled %>% mutate(treatment = D)\n  \n  # store in list\n  tbl_sampled_lst[[paste(ss)]] <- tbl_sampled\n  \n  # get average characteristics ...\n  # ... for ip\n  avg_tbl_ip <- tbl_sampled %>%\n    group_by(treatment) %>%\n    summarise(mean_ip = mean(ip)) %>% \n    ungroup %>% \n    add_column(sample_size = ss,\n               variable = \"ip\") %>% \n    pivot_wider(names_from = treatment,\n                names_prefix = \"D_\",\n                values_from = mean_ip) %>% \n    mutate(delta_abs = abs(D_1 - D_0),\n           delta_rel = delta_abs/D_0)\n  \n  # store table in list\n  avg_tbl_ip_lst[[paste(ss)]] <- avg_tbl_ip\n  \n  # ... for chatbot\n  avg_tbl_chatbot <- tbl_sampled %>%\n    group_by(treatment) %>%\n    summarise(mean_chatbot = mean(chatbot)) %>% \n    ungroup %>% \n    add_column(sample_size = ss,\n               variable = \"chatbot\") %>% \n    pivot_wider(names_from = treatment,\n                names_prefix = \"D_\",\n                values_from = mean_chatbot) %>% \n    mutate(delta_abs = abs(D_1 - D_0),\n           delta_rel = delta_abs/D_0)\n  \n  # store table in list\n  avg_tbl_chatbot_lst[[paste(ss)]] <- avg_tbl_chatbot\n}\n\n# Combine tables to one larger table\navg_ip <- avg_tbl_ip_lst %>% bind_rows()\navg_chatbot <- avg_tbl_chatbot_lst %>% bind_rows()\navgs_tbl <- avg_ip %>% bind_rows(avg_chatbot)\n\navgs_tbl\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"sample_size\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"variable\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"D_0\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"D_1\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"delta_abs\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"delta_rel\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"10\",\"2\":\"ip\",\"3\":\"6.2500000\",\"4\":\"5.3333333\",\"5\":\"0.916666667\",\"6\":\"0.14666667\"},{\"1\":\"50\",\"2\":\"ip\",\"3\":\"3.7692308\",\"4\":\"4.4166667\",\"5\":\"0.647435897\",\"6\":\"0.17176871\"},{\"1\":\"100\",\"2\":\"ip\",\"3\":\"4.5555556\",\"4\":\"4.4727273\",\"5\":\"0.082828283\",\"6\":\"0.01818182\"},{\"1\":\"500\",\"2\":\"ip\",\"3\":\"4.3485477\",\"4\":\"4.1698842\",\"5\":\"0.178663548\",\"6\":\"0.04108580\"},{\"1\":\"1000\",\"2\":\"ip\",\"3\":\"4.3326653\",\"4\":\"4.3832335\",\"5\":\"0.050568202\",\"6\":\"0.01167138\"},{\"1\":\"10\",\"2\":\"chatbot\",\"3\":\"0.2500000\",\"4\":\"0.3333333\",\"5\":\"0.083333333\",\"6\":\"0.33333333\"},{\"1\":\"50\",\"2\":\"chatbot\",\"3\":\"0.6923077\",\"4\":\"0.5833333\",\"5\":\"0.108974359\",\"6\":\"0.15740741\"},{\"1\":\"100\",\"2\":\"chatbot\",\"3\":\"0.4444444\",\"4\":\"0.3818182\",\"5\":\"0.062626263\",\"6\":\"0.14090909\"},{\"1\":\"500\",\"2\":\"chatbot\",\"3\":\"0.5103734\",\"4\":\"0.5521236\",\"5\":\"0.041750108\",\"6\":\"0.08180306\"},{\"1\":\"1000\",\"2\":\"chatbot\",\"3\":\"0.5070140\",\"4\":\"0.5009980\",\"5\":\"0.006016024\",\"6\":\"0.01186560\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n::: {.cell hash='06_rct_cache/html/unnamed-chunk-5_3cbca2b3f51290056657c0f46fa6081e'}\n\n```{.r .cell-code}\n# Plot convergence\nggplot(avgs_tbl, aes(x = sample_size, y = delta_abs)) +\n  geom_line() +\n  facet_wrap(~variable, scales = \"free\") +\n  labs(x = \"Sample size\", y = \"Absolute difference\") +\n  ggtitle(\"Absolute difference of characteristics\\n between groups by sample size\")\n```\n\n::: {.cell-output-display}\n![](06_rct_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n2. Running a regression to find the effect of chat bot on sales:\n\n::: {.cell hash='06_rct_cache/html/unnamed-chunk-6_9ffca09146d43ca520704067dcf55fb0'}\n\n```{.r .cell-code}\ndf_reg<- data.frame(ip = X$ip, chatbot = X$chatbot, treatment = X$chatbot, outcome = avgs_tbl$delta_abs)\n```\n:::\n\n::: {.cell hash='06_rct_cache/html/unnamed-chunk-7_6ea67107ae8f0e139d46b883d5d35c1c'}\n\n```{.r .cell-code}\nlm_reg <- lm(outcome ~ treatment, data = df_reg)\nsummary(lm_reg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = outcome ~ treatment, data = df_reg)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -0.21260 -0.16804 -0.13432 -0.03848  0.69952 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept) 0.217148   0.013108  16.566   <2e-16 ***\n#> treatment   0.001464   0.018464   0.079    0.937    \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.2919 on 998 degrees of freedom\n#> Multiple R-squared:  6.302e-06,\tAdjusted R-squared:  -0.0009957 \n#> F-statistic: 0.006289 on 1 and 998 DF,  p-value: 0.9368\n```\n:::\n:::\n\n\n3. Including interaction\n\n::: {.cell hash='06_rct_cache/html/unnamed-chunk-8_6388cda2492000491bcb50dd7ea4e24f'}\n\n```{.r .cell-code}\nlm_mod <- lm(outcome ~ treatment * ip + treatment * chatbot, data = df_reg)\nsummary(lm_mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = outcome ~ treatment * ip + treatment * chatbot, \n#>     data = df_reg)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -0.23075 -0.16629 -0.13347 -0.03946  0.72057 \n#> \n#> Coefficients: (2 not defined because of singularities)\n#>                    Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)        0.241849   0.026608   9.089   <2e-16 ***\n#> treatment         -0.009212   0.034720  -0.265    0.791    \n#> ip                -0.005084   0.004765  -1.067    0.286    \n#> chatbot                  NA         NA      NA       NA    \n#> treatment:ip       0.001455   0.006685   0.218    0.828    \n#> treatment:chatbot        NA         NA      NA       NA    \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.292 on 996 degrees of freedom\n#> Multiple R-squared:  0.001747,\tAdjusted R-squared:  -0.001259 \n#> F-statistic: 0.5811 on 3 and 996 DF,  p-value: 0.6275\n```\n:::\n:::\n\n\n4. Logistic regression\n\n::: {.cell hash='06_rct_cache/html/unnamed-chunk-9_b8ba6463ff04ced82e6e00c2fdd001e8'}\n\n```{.r .cell-code}\nmodel_logistic_reg <- glm(purchase ~ chatbot + mobile_device + previous_visit, data = abtest_data, family = \"binomial\")\nsummary(model_logistic_reg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> glm(formula = purchase ~ chatbot + mobile_device + previous_visit, \n#>     family = \"binomial\", data = abtest_data)\n#> \n#> Coefficients:\n#>                   Estimate Std. Error z value Pr(>|z|)    \n#> (Intercept)       -0.22185    0.12347  -1.797  0.07237 .  \n#> chatbotTRUE       -0.96894    0.13564  -7.144 9.09e-13 ***\n#> mobile_deviceTRUE -0.07119    0.14530  -0.490  0.62417    \n#> previous_visit     0.10606    0.03262   3.252  0.00115 ** \n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> (Dispersion parameter for binomial family taken to be 1)\n#> \n#>     Null deviance: 1329.1  on 999  degrees of freedom\n#> Residual deviance: 1262.2  on 996  degrees of freedom\n#> AIC: 1270.2\n#> \n#> Number of Fisher Scoring iterations: 4\n```\n:::\n:::\n\n::: {.cell hash='06_rct_cache/html/unnamed-chunk-10_2cd2420b40e6b6c0716ac558348dedc8'}\n\n```{.r .cell-code}\n# coefficient for chatbot\ncoef_chatbot <- coef(model_logistic_reg)[\"chatbotTRUE\"]\n```\n:::\n\n::: {.cell hash='06_rct_cache/html/unnamed-chunk-11_35bdce22d9c4bd2c6bb143355367d77e'}\n\n```{.r .cell-code}\n# Exponentiate the coefficient to get the odds ratio\nodds_ratio <- exp(coef_chatbot)\n\ncat(\"Odds Ratio for Chatbot:\", odds_ratio, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Odds Ratio for Chatbot: 0.3794843\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}